<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ploosqva.WebAppFrame</name>
    </assembly>
    <members>
        <member name="T:Ploosqva.WebAppFrame.DbFacade.FacadeBase">
            <summary>
            Base class for creating a web application facade
            </summary>
        </member>
        <member name="F:Ploosqva.WebAppFrame.DbFacade.FacadeBase.ctrl">
            <summary>
            The application's controller
            </summary>
        </member>
        <member name="F:Ploosqva.WebAppFrame.DbFacade.FacadeBase.objectContainer">
            <summary>
            The database client class used by SessionManager to access the database
            </summary>
        </member>
        <member name="M:Ploosqva.WebAppFrame.DbFacade.FacadeBase.CloseDatabaseServer">
            <summary>
            Commits all changes and closes the database
            </summary>
        </member>
        <member name="M:Ploosqva.WebAppFrame.DbFacade.FacadeBase.GetObjectId(System.Object)">
            <summary>
            Returns the database-unique id for an object
            </summary>
        </member>
        <member name="M:Ploosqva.WebAppFrame.DbFacade.FacadeBase.CheckMethodInvocationRights``1(``0)">
            <summary>
            Method check wheather user has appropriete rights and fires
            UnauthorizedAccessAttempt if not
            </summary>
            <typeparam name="T">type of right</typeparam>
            <param name="right">the right user needs to pass the test</param>
        </member>
        <member name="M:Ploosqva.WebAppFrame.DbFacade.FacadeBase.CheckClassAccessRights``1(System.Type,``0)">
            <summary>
             Method makes check wheather the given type is decorated with
             RequiredRightsAttribute and fires UnauthorizedAccessAttempt if it is not
            </summary>
            <param name="t">checked classes type</param>
             <typeparam name="T">type of right</typeparam>
             <param name="right">the right user needs to pass the test</param>
        </member>
        <member name="M:Ploosqva.WebAppFrame.DbFacade.FacadeBase.CheckUserLogonStatus(System.String)">
            <summary>
            Method checks wheather user is logged in and fires
            UnloggedUserActionAttempt is not
            </summary>
        </member>
        <member name="P:Ploosqva.WebAppFrame.DbFacade.FacadeBase.Db4oClient">
            <summary>
            Db4o database class
            </summary>
        </member>
        <member name="P:Ploosqva.WebAppFrame.DbFacade.FacadeBase.Session">
            <summary>
            Give access to current session and allows overriding for unit tests
            </summary>
        </member>
        <member name="E:Ploosqva.WebAppFrame.DbFacade.FacadeBase.UnloggedUserActionAttempt">
            <summary>
             Event raised when unlogged user attempts an action which requires
             logging in
            </summary>
        </member>
        <member name="E:Ploosqva.WebAppFrame.DbFacade.FacadeBase.UnauthorizedAccessAttempt">
            <summary>
             Event raised when user attempts an action which requires
             rights he does not posess
            </summary>
        </member>
        <member name="T:Ploosqva.WebAppFrame.Database.Db4oEventHandler">
            <summary>
            </summary>
        </member>
        <member name="T:Ploosqva.WebAppFrame.Database.Db4oServerModule">
            <summary>
            ServerModule manages opening and closing of a db4o server:
            - the server is opened on the first request
            - the server is closed when the application is offloaded
            </summary>
        </member>
        <member name="F:Ploosqva.WebAppFrame.Database.Db4oServerModule.objectServer">
            <summary>
            Static server object
            </summary>
        </member>
        <member name="M:Ploosqva.WebAppFrame.Database.Db4oServerModule.Configure">
            <summary>
            Registers an alias for persistent classes namespace and assembly. The current assembly is temporary 
            and renamed after each recompilation, that is why it can not be used for persistence. An alias name is used 
            to persist the classes 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ploosqva.WebAppFrame.Database.Db4oServerModule.InitServer(System.String,System.Int32,System.String,System.String,Db4objects.Db4o.Config.IConfiguration)">
            <summary>
            Initializes server configutration. Set port to 0 to open server in embedded mode
            </summary>
            <param name="filePath">path to database file</param>
            <param name="port">port used by server (0 for embedded server)</param>
            <param name="user">db username (not used in embedded mode)</param>
            <param name="pass">db user password (not used in embedded mode)</param>
            <param name="config">custom configurtion. leave null to use defaults</param>
        </member>
        <member name="M:Ploosqva.WebAppFrame.Database.Db4oServerModule.CloseServer">
            <summary>
            Method to close the server connection
            </summary>
        </member>
        <member name="E:Ploosqva.WebAppFrame.Database.Db4oServerModule.NewDatabaseCreated">
            <summary>
             Occurs after a new db4o database (file) has been created. 
            </summary>
        </member>
        <member name="P:Ploosqva.WebAppFrame.Database.Db4oServerModule.Server">
            <summary>
            Opens a server connection to the db4o database on a request 
            </summary>
        </member>
        <member name="T:Ploosqva.WebAppFrame.FormsBase.RequiredRightsAttribute">
            <summary>
             This attribute can be used to decorate objects with required right to access it.
             For example it can allow control over users accessing specific classes or methods
            </summary>
        </member>
        <member name="M:Ploosqva.WebAppFrame.FormsBase.RequiredRightsAttribute.#ctor(System.Object[])">
            <summary>
             Creates a new instance of RequiredRightsAttribute
            </summary>
            <param name="rights">list of right objects which will allow access to this object</param>
        </member>
        <member name="T:Ploosqva.WebAppFrame.ExtensionMethods">
            <summary>
             Contains extension method, which allow checking, wheather extended objects
             are decorated with RequiredRightsAttribute and this attribute contains
             certain objects
            </summary>
        </member>
        <member name="M:Ploosqva.WebAppFrame.ExtensionMethods.CheckRequiredRights``1(System.Object,``0)">
            <summary>
             Checks for rights in class's RequiredRightsAttribute
            </summary>
            <returns>true if class is not decorated with RequiredRightsAttribute or one of 
             the attributes contains required right or false if none of them do</returns>
        </member>
        <member name="T:Ploosqva.WebAppFrame.FormsBase.Db4oEnabledPageBase">
            <summary>
            </summary>
        </member>
        <member name="P:Ploosqva.WebAppFrame.FormsBase.Db4oEnabledPageBase.Facade">
            <summary>
            The entrypoint to the application layer for all webpages. The SessionManager
            has to be used to run all business bahavior.
            </summary>
        </member>
        <member name="T:Ploosqva.WebAppFrame.Database.Db4oHttpModule">
            <summary>
            This module opens a client connection to a db4o database server.
            By default client tries to connect to embedded server
            To change default behavior, HttpApplicationState variables 
            dbServerEmbedded, dbHost, dbPort, dbUser and dbPass have to be set.
            </summary>
        </member>
        <member name="F:Ploosqva.WebAppFrame.Database.Db4oHttpModule.KEY_DB4O_CLIENT">
            <summary>
            keys for the named parameters in Web.config 
            </summary>
        </member>
        <member name="M:Ploosqva.WebAppFrame.Database.Db4oHttpModule.InitClient(System.Boolean,System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
             Initializes database client connection parameters
            </summary>
            <param name="isServerEmbedded">if true, will try to connect to a locally running db4o server and will ignore the other parameters</param>
            <param name="host">server host address/ip. If null, localhost is used</param>
            <param name="port">server port. If null, 10000 is used</param>
            <param name="user">db username as set using Db4oServerModule#Init</param>
            <param name="password">db user password as set using Db4oServerModule#Init</param>
        </member>
        <member name="M:Ploosqva.WebAppFrame.Database.Db4oHttpModule.Init(System.Web.HttpApplication)">
            <summary>
            Initializes the Db4oHttpModule, and sets server data from HttpApplicationState
            (if set)
            </summary>
            <param name="application">application class</param>
        </member>
        <member name="M:Ploosqva.WebAppFrame.Database.Db4oHttpModule.Application_EndRequest(System.Object,System.EventArgs)">
            <summary>
            Closes db4o client on request end
            </summary>
            <param name="sender">The HttpApplication</param>
            <param name="e"></param>
        </member>
        <member name="P:Ploosqva.WebAppFrame.Database.Db4oHttpModule.Client">
            <summary>
            Returns an existing client connection to the caller. 
            If client connection does not exist - it will be created
            </summary>
        </member>
        <member name="M:Ploosqva.WebAppFrame.Database.Controller.GetController">
            <summary>
            Creates a Controller and returns it
            </summary>
        </member>
        <member name="M:Ploosqva.WebAppFrame.Database.Controller.GetDbClient">
            <summary>
            Pobiera połączenie z bazą. Jeżeli dla tej sesji nie istniało, zostanie otwarte nowe
            </summary>
        </member>
        <member name="M:Ploosqva.WebAppFrame.Database.Controller.CloseDatabaseServer">
            <summary>
            Commits all changes and closes the database
            </summary>
        </member>
        <member name="T:Ploosqva.WebAppFrame.Database.Db4oEventArgs">
            <summary>
             Arguments for events using the database server/client
            </summary>
        </member>
        <member name="P:Ploosqva.WebAppFrame.Database.Db4oEventArgs.Database">
            <summary>
             D4bo client (an be null at some events)
            </summary>
        </member>
        <member name="P:Ploosqva.WebAppFrame.Database.Db4oEventArgs.Server">
            <summary>
            D4bo server (an be null at some events)
            </summary>
        </member>
        <member name="T:Ploosqva.WebAppFrame.DbFacade.UnloggedUserEventArgs">
            <summary>
             These event arguments allow precise action if a user is not logged in
            </summary>
        </member>
        <member name="M:Ploosqva.WebAppFrame.DbFacade.UnloggedUserEventArgs.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)">
            <summary>
             This constructor can be used for web applications and allows actions such
             as redirect to login page with return url
            </summary>
            <param name="request"></param>
            <param name="response"></param>
        </member>
        <member name="P:Ploosqva.WebAppFrame.DbFacade.UnloggedUserEventArgs.Response">
            <summary>
             Response object current for the http request which fired this event
            </summary>
        </member>
        <member name="P:Ploosqva.WebAppFrame.DbFacade.UnloggedUserEventArgs.Request">
            <summary>
             Response object current for the http request which fired this event
            </summary>
        </member>
        <member name="T:Ploosqva.WebAppFrame.DbFacade.UnloggedUserEventHandler">
            <summary>
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
    </members>
</doc>
